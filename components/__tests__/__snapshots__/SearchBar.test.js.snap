// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`enzyme.mount 1`] = `
.css-1wvnu8l,
[data-css-1wvnu8l] {
  display: block;
  margin-top: 0em;
}

.css-mfx0z8,
[data-css-mfx0z8] {
  -webkit-transform: translate(-50%, -50%);
  display: block;
  position: absolute;
  transform: translate(-50%, -50%);
  top: 40%;
  left: 50%;
}

.css-1ypye1o,
[data-css-1ypye1o] {
  -webkit-transition: all 0.3s ease-in-out;
  display: block;
  overflow: hidden;
  height: 70px;
  position: relative;
  width: 70px;
  border-radius: 6px;
  background-color: rgba(255,255,255,0);
  transition: all 0.3s ease-in-out;
}

.css-kcozf0,
[data-css-kcozf0] {
  -webkit-transform: translate(0, 60px);
  -moz-box-sizing: border-box;
  -webkit-transition: all 0.3s cubic-bezier(0.000, 0.105, 0.035, 1.570);
  -webkit-transition-delay: 0.3s;
  position: absolute;
  top: 0px;
  left: 0px;
  background: transparent;
  box-sizing: border-box;
  border: none;
  outline: none;
  font-family: "Open Sans", Arial, Verdana;
  width: 100%;
  font-weight: 400;
  line-height: 20px;
  color: #fff;
  transition: all 0.3s cubic-bezier(0.000, 0.105, 0.035, 1.570);
  transition-delay: 0.3s;
  opacity: 0;
  transform: translate(0, 60px);
  display: inline-block;
  height: 50px;
  padding: 0px 70px 0px 20px;
  font-size: 16px;
}

.css-8l91rp,
[data-css-8l91rp] {
  -webkit-transition: all 0.3s ease-in-out;
  border: none;
  padding: 0px;
  outline: none;
  position: relative;
  z-index: 2;
  background: #fff;
  cursor: pointer;
  transition: all 0.3s ease-in-out;
  width: 70px;
  height: 70px;
  border-radius: 6px;
  float: right;
}

.css-1o5c7b1,
[data-css-1o5c7b1] {
  -webkit-transition: all 0.4s cubic-bezier(0.650, -0.600, 0.240, 1.650);
  -webkit-transform: rotate(45deg);
  width: 22px;
  height: 22px;
  display: inline-block;
  vertical-align: middle;
  position: relative;
  transition: all 0.4s cubic-bezier(0.650, -0.600, 0.240, 1.650);
  transform: rotate(45deg);
}

.css-1o5c7b1::before,
[data-css-1o5c7b1]::before {
  width: 4px;
  height: 11px;
  left: 9px;
  top: 18px;
  border-radius: 2px;
  background-color: #974BE0;
  position: absolute;
  content: "";
}

.css-1o5c7b1::after,
[data-css-1o5c7b1]::after {
  width: 14px;
  height: 14px;
  left: 0px;
  top: 0px;
  border-radius: 16px;
  border: 4px solid #974BE0;
  position: absolute;
  content: "";
}

.css-1hbe0cq,
[data-css-1hbe0cq] {
  -webkit-transition-delay: 0.2s;
  -webkit-transform: rotate(-180deg);
  -webkit-transition: all 0.3s cubic-bezier(0.285, -0.450, 0.935, 0.110);
  width: 25px;
  height: 25px;
  cursor: pointer;
  z-index: 1;
  transform: rotate(-180deg);
  transition: all 0.3s cubic-bezier(0.285, -0.450, 0.935, 0.110);
  transition-delay: 0.2s;
  position: absolute;
  top: 24px;
  right: 20px;
}

.css-1hbe0cq::before,
[data-css-1hbe0cq]::before {
  width: 5px;
  height: 25px;
  left: 10px;
  top: 0px;
  position: absolute;
  content: "";
  background-color: #FFF;
  border-radius: 2px;
}

.css-1hbe0cq::after,
[data-css-1hbe0cq]::after {
  width: 25px;
  height: 5px;
  left: 0px;
  top: 10px;
  position: absolute;
  content: "";
  background-color: #FFF;
  border-radius: 2px;
}

<withState(withState(withHandlers(SearchBar)))>
  <withState(withHandlers(SearchBar))
    toggle={[Function]}
    view={false}
  >
    <withHandlers(SearchBar)
      toggle={[Function]}
      updateValue={[Function]}
      value=""
      view={false}
    >
      <Form
        onSubmit={[Function]}
      >
        <StyledForm
          onSubmit={[Function]}
        >
          <form
            className="css-1wvnu8l"
            onSubmit={[Function]}
          >
            <StyledWrapper>
              <div
                className="css-mfx0z8"
              >
                <StyledInputHolder
                  open={false}
                >
                  <div
                    className="css-1ypye1o"
                  >
                    <Input
                      onChange={[Function]}
                      open={false}
                      placeholder="Search a topic on StackOverflow"
                      type="text"
                      value=""
                    >
                      <StyledInput
                        onChange={[Function]}
                        open={false}
                        placeholder="Search a topic on StackOverflow"
                        type="text"
                        value=""
                      >
                        <input
                          className="css-kcozf0"
                          onChange={[Function]}
                          placeholder="Search a topic on StackOverflow"
                          type="text"
                          value=""
                        />
                      </StyledInput>
                    </Input>
                    <StyledButton
                      onClick={[Function]}
                      open={false}
                      type="button"
                    >
                      <button
                        className="css-8l91rp"
                        onClick={[Function]}
                        type="button"
                      >
                        <StyledSpan
                          open={false}
                        >
                          <span
                            className="css-1o5c7b1"
                          />
                        </StyledSpan>
                      </button>
                    </StyledButton>
                  </div>
                </StyledInputHolder>
                <StyledClosingSpan
                  onClick={[Function]}
                  open={false}
                >
                  <span
                    className="css-1hbe0cq"
                    onClick={[Function]}
                  />
                </StyledClosingSpan>
              </div>
            </StyledWrapper>
          </form>
        </StyledForm>
      </Form>
    </withHandlers(SearchBar)>
  </withState(withHandlers(SearchBar))>
</withState(withState(withHandlers(SearchBar)))>
`;

exports[`enzyme.mount 2`] = `
.css-mfx0z8,
[data-css-mfx0z8] {
  -webkit-transform: translate(-50%, -50%);
  display: block;
  position: absolute;
  transform: translate(-50%, -50%);
  top: 40%;
  left: 50%;
}

<StyledWrapper
  open={true}
>
  <div
    className="css-mfx0z8"
  />
</StyledWrapper>
`;

exports[`enzyme.render 1`] = `
.css-1wvnu8l,
[data-css-1wvnu8l] {
  display: block;
  margin-top: 0em;
}

.css-mfx0z8,
[data-css-mfx0z8] {
  -webkit-transform: translate(-50%, -50%);
  display: block;
  position: absolute;
  transform: translate(-50%, -50%);
  top: 40%;
  left: 50%;
}

.css-1ypye1o,
[data-css-1ypye1o] {
  -webkit-transition: all 0.3s ease-in-out;
  display: block;
  overflow: hidden;
  height: 70px;
  position: relative;
  width: 70px;
  border-radius: 6px;
  background-color: rgba(255,255,255,0);
  transition: all 0.3s ease-in-out;
}

.css-kcozf0,
[data-css-kcozf0] {
  -webkit-transform: translate(0, 60px);
  -moz-box-sizing: border-box;
  -webkit-transition: all 0.3s cubic-bezier(0.000, 0.105, 0.035, 1.570);
  -webkit-transition-delay: 0.3s;
  position: absolute;
  top: 0px;
  left: 0px;
  background: transparent;
  box-sizing: border-box;
  border: none;
  outline: none;
  font-family: "Open Sans", Arial, Verdana;
  width: 100%;
  font-weight: 400;
  line-height: 20px;
  color: #fff;
  transition: all 0.3s cubic-bezier(0.000, 0.105, 0.035, 1.570);
  transition-delay: 0.3s;
  opacity: 0;
  transform: translate(0, 60px);
  display: inline-block;
  height: 50px;
  padding: 0px 70px 0px 20px;
  font-size: 16px;
}

.css-8l91rp,
[data-css-8l91rp] {
  -webkit-transition: all 0.3s ease-in-out;
  border: none;
  padding: 0px;
  outline: none;
  position: relative;
  z-index: 2;
  background: #fff;
  cursor: pointer;
  transition: all 0.3s ease-in-out;
  width: 70px;
  height: 70px;
  border-radius: 6px;
  float: right;
}

.css-1o5c7b1,
[data-css-1o5c7b1] {
  -webkit-transition: all 0.4s cubic-bezier(0.650, -0.600, 0.240, 1.650);
  -webkit-transform: rotate(45deg);
  width: 22px;
  height: 22px;
  display: inline-block;
  vertical-align: middle;
  position: relative;
  transition: all 0.4s cubic-bezier(0.650, -0.600, 0.240, 1.650);
  transform: rotate(45deg);
}

.css-1o5c7b1::before,
[data-css-1o5c7b1]::before {
  width: 4px;
  height: 11px;
  left: 9px;
  top: 18px;
  border-radius: 2px;
  background-color: #974BE0;
  position: absolute;
  content: "";
}

.css-1o5c7b1::after,
[data-css-1o5c7b1]::after {
  width: 14px;
  height: 14px;
  left: 0px;
  top: 0px;
  border-radius: 16px;
  border: 4px solid #974BE0;
  position: absolute;
  content: "";
}

.css-1hbe0cq,
[data-css-1hbe0cq] {
  -webkit-transition-delay: 0.2s;
  -webkit-transform: rotate(-180deg);
  -webkit-transition: all 0.3s cubic-bezier(0.285, -0.450, 0.935, 0.110);
  width: 25px;
  height: 25px;
  cursor: pointer;
  z-index: 1;
  transform: rotate(-180deg);
  transition: all 0.3s cubic-bezier(0.285, -0.450, 0.935, 0.110);
  transition-delay: 0.2s;
  position: absolute;
  top: 24px;
  right: 20px;
}

.css-1hbe0cq::before,
[data-css-1hbe0cq]::before {
  width: 5px;
  height: 25px;
  left: 10px;
  top: 0px;
  position: absolute;
  content: "";
  background-color: #FFF;
  border-radius: 2px;
}

.css-1hbe0cq::after,
[data-css-1hbe0cq]::after {
  width: 25px;
  height: 5px;
  left: 0px;
  top: 10px;
  position: absolute;
  content: "";
  background-color: #FFF;
  border-radius: 2px;
}

<form
  class="css-1wvnu8l"
>
  <div
    class="css-mfx0z8"
  >
    <div
      class="css-1ypye1o"
    >
      <input
        class="css-kcozf0"
        placeholder="Search a topic on StackOverflow"
        type="text"
        value=""
      />
      <button
        class="css-8l91rp"
        type="button"
      >
        <span
          class="css-1o5c7b1"
        />
      </button>
    </div>
    <span
      class="css-1hbe0cq"
    />
  </div>
</form>
`;

exports[`enzyme.render 2`] = `
.css-mfx0z8,
[data-css-mfx0z8] {
  -webkit-transform: translate(-50%, -50%);
  display: block;
  position: absolute;
  transform: translate(-50%, -50%);
  top: 40%;
  left: 50%;
}

<div
  class="css-mfx0z8"
/>
`;

exports[`enzyme.shallow 1`] = `
<withState(withHandlers(SearchBar))
  toggle={[Function]}
  view={false}
/>
`;

exports[`enzyme.shallow 2`] = `
.css-mfx0z8,
[data-css-mfx0z8] {
  -webkit-transform: translate(-50%, -50%);
  display: block;
  position: absolute;
  transform: translate(-50%, -50%);
  top: 40%;
  left: 50%;
}

<div
  className="css-mfx0z8"
/>
`;
